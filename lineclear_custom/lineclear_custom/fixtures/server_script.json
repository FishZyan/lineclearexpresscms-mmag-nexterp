[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-03 09:49:33.428676",
  "module": "LineClear Custom",
  "name": "Customer Debtor Code Generation",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Customer",
  "script": "if not doc.debtor_code:\r\n    code_generation = frappe.get_doc(\"Code Generation\")\r\n    if not code_generation.debtor_code_generation_disable:\r\n        value = code_generation.debtor_code_format\r\n        \r\n        if value == '300-@#####':\r\n            first_letter = doc.customer_name[0].upper()\r\n            base_code = f\"300-{first_letter}\"\r\n        \r\n            # Search existing debtor_codes matching pattern\r\n            existing_customers = frappe.get_all(\r\n                \"Customer\",\r\n                filters={\"debtor_code\": [\"like\", f\"{base_code}%\"]},\r\n                fields=[\"debtor_code\"],\r\n                order_by=\"debtor_code desc\",\r\n                limit_page_length=1000\r\n            )\r\n        \r\n            max_number = 0\r\n            for row in existing_customers:\r\n                code = row.debtor_code\r\n                parts = code.split('-')\r\n                if len(parts) == 2 and parts[0] == \"300\" and parts[1].startswith(first_letter):\r\n                    numeric_part = parts[1][1:].lstrip('0') or '0'\r\n                    number = int(numeric_part)\r\n                    if number > max_number:\r\n                        max_number = number\r\n        \r\n            next_number = str(max_number + 1).zfill(5)\r\n            doc.debtor_code = f\"{base_code}{next_number}\"\r\n            doc.name = doc.debtor_code + \" \" + doc.customer_name\r\n        \r\n        elif value == '1000-{Currency}-@###':\r\n            if not doc.default_currency:\r\n                frappe.throw(\"Default Currency is required to generate debtor code.\")\r\n            \r\n            first_letter = doc.customer_name[0].upper()\r\n            currency = doc.default_currency\r\n            base_code = f\"1000-{currency}-{first_letter}\"\r\n            \r\n            existing_customers = frappe.get_all(\r\n                \"Customer\",\r\n                filters={\"debtor_code\": [\"like\", f\"{base_code}%\"]},\r\n                fields=[\"debtor_code\"],\r\n                order_by=\"debtor_code desc\",\r\n                limit_page_length=1000\r\n            )\r\n            \r\n            max_number = 0\r\n            for row in existing_customers:\r\n                code = row.debtor_code\r\n                parts = code.split('-')\r\n                # Expecting format: 1000-USD-A001\r\n                if len(parts) == 3 and parts[0] == \"1000\" and parts[1] == currency and parts[2].startswith(first_letter):\r\n                    numeric_part = parts[2][1:].lstrip('0') or '0'\r\n                    number = int(numeric_part)\r\n                    if number > max_number:\r\n                        max_number = number\r\n            \r\n            next_number = str(max_number + 1).zfill(3)\r\n            doc.debtor_code = f\"{base_code}{next_number}\"\r\n            doc.name = f\"{doc.debtor_code} {doc.customer_name}\"\r\n    \r\n        \r\n        else:\r\n            frappe.throw(\"Unexpected Error\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-03 09:48:56.280330",
  "module": "LineClear Custom",
  "name": "Supplier Creditor Code Generation",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Supplier",
  "script": "if not doc.creditor_code:\r\n    code_generation = frappe.get_doc(\"Code Generation\")\r\n    if not code_generation.creditor_code_generation_disable:\r\n        value = code_generation.creditor_code_format\r\n        \r\n        if value == '400-@#####':\r\n            first_letter = doc.supplier_name[0].upper()\r\n            base_code = f\"400-{first_letter}\"\r\n        \r\n            # Search existing creditor_code matching pattern\r\n            existing_suppliers = frappe.get_all(\r\n                \"Supplier\",\r\n                filters={\"creditor_code\": [\"like\", f\"{base_code}%\"]},\r\n                fields=[\"creditor_code\"],\r\n                order_by=\"creditor_code desc\",\r\n                limit_page_length=1000\r\n            )\r\n        \r\n            max_number = 0\r\n            for row in existing_suppliers:\r\n                code = row.creditor_code\r\n                parts = code.split('-')\r\n                if len(parts) == 2 and parts[0] == \"400\" and parts[1].startswith(first_letter):\r\n                    numeric_part = parts[1][1:].lstrip('0') or '0'\r\n                    number = int(numeric_part)\r\n                    if number > max_number:\r\n                        max_number = number\r\n        \r\n            next_number = str(max_number + 1).zfill(5)\r\n            doc.creditor_code = f\"{base_code}{next_number}\"\r\n            doc.name = doc.creditor_code + \" \" + doc.supplier_name\r\n            \r\n        elif value == '2000-{Currency}-@###':\r\n            if not doc.default_currency:\r\n                frappe.throw(\"Default Currency is required to generate creditor code.\")\r\n            \r\n            first_letter = doc.supplier_name[0].upper()\r\n            currency = doc.default_currency\r\n            base_code = f\"2000-{currency}-{first_letter}\"\r\n            \r\n            existing_suppliers = frappe.get_all(\r\n                \"Supplier\",\r\n                filters={\"creditor_code\": [\"like\", f\"{base_code}%\"]},\r\n                fields=[\"creditor_code\"],\r\n                order_by=\"creditor_code desc\",\r\n                limit_page_length=1000\r\n            )\r\n            \r\n            max_number = 0\r\n            for row in existing_suppliers:\r\n                code = row.creditor_code\r\n                parts = code.split('-')\r\n                # Expecting format: 2000-USD-A001\r\n                if len(parts) == 3 and parts[0] == \"2000\" and parts[1] == currency and parts[2].startswith(first_letter):\r\n                    numeric_part = parts[2][1:].lstrip('0') or '0'\r\n                    number = int(numeric_part)\r\n                    if number > max_number:\r\n                        max_number = number\r\n            \r\n            next_number = str(max_number + 1).zfill(3)\r\n            doc.creditor_code = f\"{base_code}{next_number}\"\r\n            doc.name = f\"{doc.creditor_code} {doc.supplier_name}\"\r\n    \r\n        \r\n        else:\r\n            frappe.throw(\"Unexpected Error\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-08-15 14:31:41.242670",
  "module": "LineClear Custom",
  "name": "Credit Debit Note Upon Submit",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Journal Entry",
  "script": "# Before Save Server Script for Journal Entry\r\nif doc.accounting_type == \"Accounts Receivable\" :\r\n    if doc.customer:\r\n        customer = frappe.get_doc(\"Customer\", doc.customer)\r\n        doc.custom_lhdn_enable_control = customer.custom_lhdn_enable_control\r\nelif doc.accounting_type == \"Accounts Payable\":\r\n    if doc.supplier:\r\n        supplier = frappe.get_doc(\"Supplier\", doc.supplier)\r\n        doc.custom_lhdn_enable_control = supplier.custom_lhdn_enable_control\r\n    \r\nif not doc.custom_is_oms_creation:\r\n    company = doc.company\r\n    accounting_type = doc.accounting_type\r\n    voucher_type = doc.voucher_type\r\n    total_tax_amount = 0\r\n    doc.custom_created_by = frappe.session.user\r\n    \r\n    \r\n    if accounting_type == \"Accounts Receivable\" :\r\n        for item in doc.custom_accounting_entires:\r\n            item.tax_type = 'Sales Taxes and Charges Template'\r\n    elif accounting_type == \"Accounts Payable\":\r\n        for item in doc.custom_accounting_entires:\r\n            item.tax_type = 'Purchase Taxes and Charges Template'\r\n\r\n    if accounting_type == \"Accounts Receivable\" and doc.customer:\r\n        customer = frappe.get_doc(\"Customer\", doc.customer)\r\n        debtor_account = \"\"\r\n\r\n        customer_account = None\r\n        for acc in customer.accounts:\r\n            if acc.company == company:\r\n                customer_account = acc\r\n                break\r\n\r\n        if customer_account:\r\n            debtor_account = customer_account.account\r\n        elif customer.custom_debtor_type == \"NTD\":\r\n            debtor_account = \"300-1000 - NON TRADE DEBTORS - LCESB\"\r\n        else:\r\n            debtor_account = \"300-0000 - TRADE DEBTORS - LCESB\"\r\n\r\n        doc.set(\"accounts\", [])\r\n\r\n        for item in doc.custom_accounting_entires:\r\n            total_tax_amount = total_tax_amount + item.tax_amount\r\n\r\n            debtor = doc.append(\"accounts\", {})\r\n            debtor.account = debtor_account\r\n            debtor.party_type = \"Customer\"\r\n            debtor.party = doc.customer\r\n            debtor.custom_description = item.description\r\n\r\n            if voucher_type == \"Debit Note\":\r\n                debtor.debit_in_account_currency = item.amount + item.tax_amount\r\n            elif voucher_type == \"Credit Note\":\r\n                debtor.credit_in_account_currency = item.amount + item.tax_amount\r\n\r\n            debtor.reference_type = item.reference_type\r\n            debtor.reference_name = item.reference\r\n            debtor.custom_tax_code = item.tax_code\r\n            debtor.custom_tax_amount = item.tax_amount\r\n\r\n            income = doc.append(\"accounts\", {})\r\n            income.account = item.account\r\n            income.custom_description = item.description\r\n\r\n            if voucher_type == \"Credit Note\":\r\n                income.debit_in_account_currency = item.amount\r\n            elif voucher_type == \"Debit Note\":\r\n                income.credit_in_account_currency = item.amount\r\n\r\n            income.custom_tax_code = item.tax_code\r\n            income.custom_tax_amount = item.tax_amount\r\n            if item.cost_center:\r\n                income.cost_center = item.cost_center\r\n            else:\r\n                income.cost_center = 'Main - LCESB'\r\n\r\n            if item.tax_amount != 0:\r\n                tax = doc.append(\"accounts\", {})\r\n                tax.account = item.tax_account\r\n                tax.custom_description = item.description\r\n\r\n                if voucher_type == \"Credit Note\":\r\n                    tax.debit_in_account_currency = item.tax_amount\r\n                elif voucher_type == \"Debit Note\":\r\n                    tax.credit_in_account_currency = item.tax_amount\r\n\r\n                tax.custom_tax_code = item.tax_code\r\n                tax.custom_tax_amount = item.tax_amount\r\n                if item.cost_center:\r\n                    tax.cost_center = item.cost_center\r\n                else:\r\n                    tax.cost_center = 'Main - LCESB'\r\n\r\n    elif accounting_type == \"Accounts Payable\" and doc.supplier:\r\n        supplier = frappe.get_doc(\"Supplier\", doc.supplier)\r\n        creditor_account = \"\"\r\n\r\n        supplier_account = None\r\n        for acc in supplier.accounts:\r\n            if acc.company == company:\r\n                supplier_account = acc\r\n                break\r\n\r\n        if supplier_account:\r\n            creditor_account = supplier_account.account\r\n        elif supplier.supplier_type == \"Non-Trade (Bank)\":\r\n            creditor_account = \"400-1000 - OTHER CREDITORS - LCESB\"\r\n        elif supplier.supplier_type == \"HIRE PURCHASE CREDITOR\":\r\n            creditor_account = \"420-0000 - HIRE PURCHASE CREDITOR - LCESB\"\r\n        elif supplier.supplier_type in [\"Non-Trade Creditor\", \"Staff's Claim\"]:\r\n            creditor_account = \"400-1000 - OTHER CREDITORS - LCESB\"\r\n        else:\r\n            creditor_account = \"400-0000 - TRADE CREDITORS - LCESB\"\r\n\r\n        doc.set(\"accounts\", [])\r\n\r\n        for item in doc.custom_accounting_entires:\r\n            total_tax_amount = total_tax_amount + item.tax_amount\r\n\r\n            creditor = doc.append(\"accounts\", {})\r\n            creditor.account = creditor_account\r\n            creditor.party_type = \"Supplier\"\r\n            creditor.party = doc.supplier\r\n            creditor.custom_description = item.description\r\n\r\n            if voucher_type == \"Credit Note\":\r\n                creditor.debit_in_account_currency = item.amount + item.tax_amount\r\n            elif voucher_type == \"Debit Note\":\r\n                creditor.credit_in_account_currency = item.amount + item.tax_amount\r\n\r\n            creditor.reference_type = item.reference_type\r\n            creditor.reference_name = item.reference\r\n            creditor.ap_tax_code = item.tax_code\r\n            creditor.custom_tax_amount = item.tax_amount\r\n\r\n            expense = doc.append(\"accounts\", {})\r\n            expense.account = item.account\r\n            expense.custom_description = item.description\r\n\r\n            if voucher_type == \"Debit Note\":\r\n                expense.debit_in_account_currency = item.amount\r\n            elif voucher_type == \"Credit Note\":\r\n                expense.credit_in_account_currency = item.amount\r\n\r\n            expense.ap_tax_code = item.tax_code\r\n            expense.custom_tax_amount = item.tax_amount\r\n            if item.cost_center:\r\n                expense.cost_center = item.cost_center\r\n            else:\r\n                expense.cost_center = 'Main - LCESB'\r\n\r\n            if item.tax_amount != 0:\r\n                tax = doc.append(\"accounts\", {})\r\n                tax.account = item.tax_account\r\n                tax.custom_description = item.description\r\n\r\n                if voucher_type == \"Debit Note\":\r\n                    tax.debit_in_account_currency = item.tax_amount\r\n                elif voucher_type == \"Credit Note\":\r\n                    tax.credit_in_account_currency = item.tax_amount\r\n\r\n                tax.ap_tax_code = item.tax_code\r\n                tax.custom_tax_amount = item.tax_amount\r\n                if item.cost_center:\r\n                    tax.cost_center = item.cost_center\r\n                else:\r\n                    tax.cost_center = 'Main - LCESB'\r\n\r\n    doc.custom_total_tax_amount = total_tax_amount\r\n",
  "script_type": "DocType Event"
 }
]